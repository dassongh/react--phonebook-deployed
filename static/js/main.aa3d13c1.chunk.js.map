{"version":3,"sources":["App.module.css","components/contactForm/ContactForm.jsx","components/contactList/filter/Filter.jsx","components/contactList/contact/Contact.jsx","components/contactList/ContactList.jsx","App.jsx","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","inputHandler","e","currentTarget","value","setState","submitHandler","preventDefault","props","addContactHandler","reset","onSubmit","this","className","s","label","type","pattern","title","onChange","required","Component","Filter","Contact","id","remove","onClick","ContactList","contacts","map","App","filter","removeContact","removingContact","find","contact","target","splice","indexOf","addContact","some","alert","prevState","nanoid","filterVisibleContacts","normalizeFilter","toLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","reverse","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa3d13c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2MId-\"};","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    addContactHandler: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputHandler = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    this.props.addContactHandler(name, number);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n        <label className={s.label}>\r\n          <span className={s.name}>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            onChange={this.inputHandler}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          <span className={s.name}>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            onChange={this.inputHandler}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" name=\"filter\" onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Contact({ name, number, id, remove }) {\r\n  return (\r\n    <li className=\"item\">\r\n      {name}: {number}\r\n      <button className=\"rmv-btn\" type=\"button\" onClick={remove} id={id}>\r\n        remove\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Filter from './filter/Filter';\r\nimport Contact from './contact/Contact';\r\n\r\nexport default function ContactList({ contacts, inputHandler, remove }) {\r\n  return (\r\n    <div>\r\n      <Filter onChange={inputHandler} />\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <Contact key={id} name={name} number={number} id={id} remove={remove} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  inputHandler: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/contactForm/ContactForm\";\r\nimport { nanoid } from \"nanoid\";\r\nimport s from \"./App.module.css\";\r\nimport ContactList from \"./components/contactList/ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    this.setState({ contacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  removeContact = (e) => {\r\n    const { contacts } = this.state;\r\n    const removingContact = contacts.find(\r\n      (contact) => contact.id === e.target.id\r\n    );\r\n    contacts.splice(contacts.indexOf(removingContact), 1);\r\n\r\n    this.setState({ contacts: [...contacts] });\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    if (this.state.contacts.some((contact) => contact.name === name))\r\n      return alert(`${name} is already in contacts`);\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, { name, number, id: nanoid() }],\r\n      };\r\n    });\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  filterVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const contacts = this.filterVisibleContacts().reverse();\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <h2>Phonebook</h2>\r\n        <p>deploy</p>\r\n\r\n        <ContactForm addContactHandler={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <ContactList\r\n          contacts={contacts}\r\n          inputHandler={this.inputHandler}\r\n          remove={this.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3RoV0\",\"name\":\"ContactForm_name__29t6f\"};"],"sourceRoot":""}